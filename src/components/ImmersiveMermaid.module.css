/* ImmersiveMermaid Component Styles */

.container {
  position: relative;
  margin: 3rem 0;
  border-radius: 16px;
  overflow: hidden;
  background: rgba(248, 250, 252, 0.9);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
}

[data-theme='dark'] .container {
  background: rgba(10, 10, 10, 0.7);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

.container:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
}

[data-theme='dark'] .container:hover {
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4), 0 0 20px rgba(59, 130, 246, 0.3), 0 0 20px rgba(249, 115, 22, 0.2);
}

.fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;
  margin: 0;
  padding: 0;
  border-radius: 0;
  display: flex;
  flex-direction: column;
  background-color: rgba(248, 250, 252, 0.95);
}

[data-theme='dark'] .fullscreen {
  background-color: rgba(10, 10, 10, 0.95);
}

.gradientBorder {
  position: relative;
}

.gradientBorder::before {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(
    45deg,
    rgba(59, 130, 246, 0.5),
    rgba(16, 185, 129, 0),
    rgba(249, 115, 22, 0.5),
    rgba(59, 130, 246, 0)
  );
  border-radius: 16px;
  z-index: -1;
  background-size: 400% 400%;
  animation: gradientBorder 8s linear infinite;
}

@keyframes gradientBorder {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.title {
  margin: 0;
  padding: 1.5rem 2rem;
  background: rgba(248, 250, 252, 0.9);
  color: var(--neutral-900);
  font-size: 1.5rem;
  font-weight: 600;
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
}

[data-theme='dark'] .title {
  background: rgba(10, 10, 10, 0.8);
  color: #fff;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
}

.caption {
  margin: 0;
  padding: 1.5rem 2rem;
  background: rgba(248, 250, 252, 0.9);
  color: var(--neutral-600);
  font-size: 1rem;
  font-style: italic;
  border-top: 1px solid rgba(59, 130, 246, 0.2);
}

[data-theme='dark'] .caption {
  background: rgba(10, 10, 10, 0.8);
  color: rgba(255, 255, 255, 0.8);
  border-top: 1px solid rgba(59, 130, 246, 0.2);
}

.diagramContainer {
  position: relative;
  padding: 2rem;
  min-height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.canvasContainer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
}

.controls {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  margin-top: 1rem;
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  z-index: 10;
}

.controlButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(59, 130, 246, 0.15);
  border: 1px solid rgba(59, 130, 246, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
  padding: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.controlButton:hover {
  background: rgba(59, 130, 246, 0.25);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3), 0 0 8px rgba(59, 130, 246, 0.4);
}

.controlButton svg {
  width: 22px;
  height: 22px;
  fill: rgba(255, 255, 255, 0.9);
}

.error {
  padding: 1rem;
  background: rgba(239, 68, 68, 0.1);
  border-left: 4px solid #ef4444;
  border-radius: 4px;
  margin: 1rem 0;
  color: #ef4444;
}

.error pre {
  margin-top: 0.5rem;
  padding: 0.5rem;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  overflow-x: auto;
  font-size: 0.875rem;
  color: inherit;
}

/* Animation styles */
.animated path {
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
}

/* Interactive node styles */
.interactiveNode {
  cursor: pointer;
  transition: all 0.3s ease;
}

.interactiveNode:hover {
  filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.5));
}

.highlightedNode {
  filter: drop-shadow(0 0 12px rgba(59, 130, 246, 0.8)) !important;
}

.highlightedNode rect,
.highlightedNode circle,
.highlightedNode ellipse,
.highlightedNode polygon {
  fill: rgba(59, 130, 246, 0.2) !important;
  stroke: #60a5fa !important;
  stroke-width: 3px !important;
}

/* Interactive edge styles */
.interactiveEdge {
  cursor: pointer;
  transition: all 0.3s ease;
}

.interactiveEdge:hover .path {
  stroke-width: 3px !important;
  filter: drop-shadow(0 0 5px rgba(59, 130, 246, 0.5));
}

.highlightedEdge .path {
  stroke: #60a5fa !important;
  stroke-width: 3px !important;
  filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.8)) !important;
}

/* Glow effect */
.glowEffect {
  filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.3));
}

/* Responsive styles */
@media (max-width: 768px) {
  .container {
    margin: 2rem 0;
  }
  
  .title, .caption {
    padding: 1rem 1.5rem;
    font-size: 1.25rem;
  }
  
  .caption {
    font-size: 0.875rem;
  }
  
  .diagramContainer {
    padding: 1.5rem;
  }
  
  .controls {
    bottom: 0.5rem;
    right: 0.5rem;
  }
  
  .controlButton {
    width: 36px;
    height: 36px;
  }
  
  .controlButton svg {
    width: 18px;
    height: 18px;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .animated path {
    stroke-dasharray: none;
    stroke-dashoffset: 0;
    animation: none !important;
  }
  
  .gradientBorder::before {
    animation: none !important;
  }
  
  .container:hover {
    transform: none;
  }
  
  .controlButton:hover {
    transform: none;
  }
}
