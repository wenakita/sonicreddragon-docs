/**
 * Component Styles Module
 * 
 * This module contains styles for various components including UnifiedMermaid.
 */

/* UnifiedMermaid Component */
.unifiedMermaidWrapper {
  position: relative;
  margin: 3rem 0;
  border-radius: 16px;
  overflow: hidden;
  background: rgba(248, 250, 252, 0.9);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  border: 1px solid rgba(59, 130, 246, 0.2);
  transform: translateZ(0);
  padding: 1.5rem;
}

/* Dark theme styles */
[data-theme='dark'] .unifiedMermaidWrapper {
  background: rgba(10, 10, 10, 0.7);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(59, 130, 246, 0.3);
}

/* Hover effects */
.unifiedMermaidWrapper:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
  border-color: rgba(59, 130, 246, 0.4);
}

[data-theme='dark'] .unifiedMermaidWrapper:hover {
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4), 0 0 20px rgba(59, 130, 246, 0.3);
  border-color: rgba(59, 130, 246, 0.5);
}

/* Diagram title */
.diagramTitle {
  margin: 0 0 1.5rem 0;
  padding: 0 0 1rem 0;
  color: var(--ifm-color-gray-900);
  font-size: 1.5rem;
  font-weight: 600;
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
  text-align: center;
}

[data-theme='dark'] .diagramTitle {
  color: #fff;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
}

/* Diagram caption */
.diagramCaption {
  margin: 1.5rem 0 0 0;
  padding: 1rem 0 0 0;
  color: var(--ifm-color-gray-600);
  font-size: 1rem;
  font-style: italic;
  border-top: 1px solid rgba(59, 130, 246, 0.2);
  text-align: center;
}

[data-theme='dark'] .diagramCaption {
  color: rgba(255, 255, 255, 0.8);
  border-top: 1px solid rgba(59, 130, 246, 0.2);
}

/* Mermaid container */
.mermaidContainer {
  position: relative;
  min-height: 150px;
  transition: all 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.mermaidContainer svg {
  max-width: 100%;
  height: auto !important;
  display: block;
  margin: 0 auto;
}

/* Loading state */
.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 200px;
}

/* Loading indicator */
.loadingIndicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  text-align: center;
  color: var(--ifm-color-gray-600);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
}

[data-theme='dark'] .loadingIndicator {
  color: rgba(255, 255, 255, 0.7);
}

/* Loading spinner */
.loadingSpinner {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
  margin-bottom: 1rem;
}

.loadingSpinner div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: var(--ifm-color-primary);
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}

.loadingSpinner div:nth-child(1) {
  left: 8px;
  animation: loadingSpinner1 0.6s infinite;
}

.loadingSpinner div:nth-child(2) {
  left: 8px;
  animation: loadingSpinner2 0.6s infinite;
}

.loadingSpinner div:nth-child(3) {
  left: 32px;
  animation: loadingSpinner2 0.6s infinite;
}

.loadingSpinner div:nth-child(4) {
  left: 56px;
  animation: loadingSpinner3 0.6s infinite;
}

@keyframes loadingSpinner1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes loadingSpinner2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}

@keyframes loadingSpinner3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

/* Error message */
.errorMessage {
  padding: 1.5rem;
  margin: 1rem 0;
  background-color: rgba(220, 38, 38, 0.1);
  border-left: 4px solid rgba(220, 38, 38, 0.7);
  border-radius: 0.5rem;
  color: var(--ifm-color-gray-800);
}

[data-theme='dark'] .errorMessage {
  background-color: rgba(220, 38, 38, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.errorMessage pre {
  margin-top: 0.5rem;
  padding: 1rem;
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: 0.5rem;
  overflow-x: auto;
  font-size: 0.875rem;
}

[data-theme='dark'] .errorMessage pre {
  background-color: rgba(0, 0, 0, 0.3);
}

/* Mermaid controls */
.mermaidControls {
  display: flex;
  justify-content: center;
  gap: 0.75rem;
  margin-top: 1.5rem;
  z-index: 10;
  background: rgba(255, 255, 255, 0.1);
  padding: 0.5rem;
  border-radius: 2rem;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

[data-theme='dark'] .mermaidControls {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(59, 130, 246, 0.2);
}

/* Control buttons */
.mermaidControlButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: rgba(59, 130, 246, 0.15);
  border: 1px solid rgba(59, 130, 246, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
  padding: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  color: var(--ifm-color-gray-900);
  outline: none;
}

[data-theme='dark'] .mermaidControlButton {
  background: rgba(59, 130, 246, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.mermaidControlButton svg {
  width: 18px;
  height: 18px;
}

.mermaidControlButton:hover {
  background: rgba(59, 130, 246, 0.25);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3), 0 0 8px rgba(59, 130, 246, 0.4);
}

[data-theme='dark'] .mermaidControlButton:hover {
  background: rgba(59, 130, 246, 0.3);
}

.mermaidControlButton:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
}

.mermaidControlButton:active {
  transform: translateY(1px);
}

/* Fullscreen mode */
.fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;
  margin: 0;
  padding: 2rem;
  border-radius: 0;
  display: flex;
  flex-direction: column;
  background-color: rgba(248, 250, 252, 0.98);
  border: none;
}

[data-theme='dark'] .fullscreen {
  background-color: rgba(10, 10, 10, 0.98);
}

.fullscreen .mermaidContainer {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: auto;
  padding: 2rem;
}

.fullscreen .mermaidContainer svg {
  max-height: 80vh;
  max-width: 90vw;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.05);
  padding: 2rem;
}

[data-theme='dark'] .fullscreen .mermaidContainer svg {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
  background: rgba(0, 0, 0, 0.2);
}

/* Particles */
.withParticles {
  overflow: hidden;
  position: relative;
}

.particle {
  position: absolute;
  background-color: rgba(59, 130, 246, 0.5);
  border-radius: 50%;
  pointer-events: none;
  animation: float 15s infinite ease-in-out;
  z-index: 0;
}

.fullscreen .particle {
  background-color: rgba(59, 130, 246, 0.3);
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-30px) translateX(15px);
  }
  50% {
    transform: translateY(-15px) translateX(-15px);
  }
  75% {
    transform: translateY(-45px) translateX(10px);
  }
}

/* Animated diagram container */
.animatedDiagramContainer {
  position: relative;
  margin: 2rem 0;
  padding: 1.5rem;
  border-radius: 12px;
  background: rgba(248, 250, 252, 0.9);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  border: 1px solid rgba(59, 130, 246, 0.2);
}

[data-theme='dark'] .animatedDiagramContainer {
  background: rgba(10, 10, 10, 0.7);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.animatedDiagramContainer:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
}

[data-theme='dark'] .animatedDiagramContainer:hover {
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4), 0 0 20px rgba(59, 130, 246, 0.3);
}

.animationTitle {
  margin: 0 0 1rem 0;
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--ifm-color-gray-900);
}

[data-theme='dark'] .animationTitle {
  color: #fff;
}

.animationDescription {
  margin: 0 0 1.5rem 0;
  color: var(--ifm-color-gray-600);
}

[data-theme='dark'] .animationDescription {
  color: rgba(255, 255, 255, 0.8);
}

.animatedContent {
  position: relative;
  min-height: 100px;
}

.animationLoading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--ifm-color-gray-600);
  font-style: italic;
}

[data-theme='dark'] .animationLoading {
  color: rgba(255, 255, 255, 0.7);
}

/* Animated node */
.animatedNode {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  margin: 0.5rem;
  background-color: var(--ifm-color-primary-lightest);
  color: var(--ifm-color-gray-900);
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

[data-theme='dark'] .animatedNode {
  background-color: var(--ifm-color-primary-darkest);
  color: #fff;
}

.animatedNode:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* Connection SVG */
.connectionSvg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
}

.connectionLabel {
  fill: var(--ifm-color-gray-700);
  font-size: 12px;
}

[data-theme='dark'] .connectionLabel {
  fill: rgba(255, 255, 255, 0.8);
}

/* Responsive styles */
@media (max-width: 768px) {
  .unifiedMermaidWrapper {
    margin: 2rem 0;
  }
  
  .diagramTitle {
    padding: 1rem 1.5rem;
    font-size: 1.25rem;
  }
  
  .diagramCaption {
    padding: 1rem 1.5rem;
    font-size: 0.875rem;
  }
  
  .mermaidContainer {
    padding: 1rem;
  }
  
  .mermaidControls {
    bottom: 0.5rem;
    right: 0.5rem;
  }
  
  .mermaidControlButton {
    width: 36px;
    height: 36px;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .unifiedMermaidWrapper,
  .unifiedMermaidWrapper:hover,
  .mermaidControlButton,
  .mermaidControlButton:hover,
  .animatedDiagramContainer,
  .animatedDiagramContainer:hover,
  .animatedNode,
  .animatedNode:hover {
    transition: none !important;
    transform: none !important;
    animation: none !important;
  }
  
  .particle {
    animation: none !important;
  }
  
  .loadingSpinner div {
    animation: none !important;
  }
}
