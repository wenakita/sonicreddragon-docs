name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Docusaurus site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund
        
      - name: Create direct sidebar fix with custom head file
        run: |
          echo "Creating custom head file for sidebar fix..."
          
          # Create directory if it doesn't exist
          mkdir -p src/theme
          
          # Create custom head component
          cat > src/theme/Head.js << 'EOL'
          /**
           * Custom Head component with sidebar fix
           */
          import React from 'react';
          import Head from '@docusaurus/Head';

          export default function CustomHead(props) {
            return (
              <>
                <Head {...props} />
                {/* Critical sidebar fix CSS - highest priority */}
                <style>
                  {`
                  /* Desktop sidebar positioning - enforced with !important */
                  @media (min-width: 997px) {
                    .theme-doc-sidebar-container {
                      position: fixed !important;
                      top: var(--ifm-navbar-height) !important;
                      left: 0 !important;
                      bottom: 0 !important;
                      width: 250px !important;
                      height: calc(100vh - var(--ifm-navbar-height)) !important;
                      overflow-y: auto !important;
                      z-index: 200 !important;
                      border-right: 1px solid var(--ifm-toc-border-color) !important;
                    }
                    
                    [class*="docMainContainer"] {
                      margin-left: 250px !important;
                      width: calc(100% - 250px) !important;
                      max-width: calc(100% - 250px) !important;
                    }
                
                    /* Fix any nested container elements */
                    [class*="docMainContainer"] .container,
                    [class*="docMainContainer"] .row,
                    [class*="docMainContainer"] [class*="docItemCol"] {
                      width: 100% !important;
                      max-width: 100% !important;
                      margin-left: 0 !important;
                    }
                  }
                
                  /* Mobile sidebar positioning */
                  @media (max-width: 996px) {
                    .theme-doc-sidebar-container {
                      position: fixed !important;
                      top: 0 !important;
                      left: 0 !important;
                      bottom: 0 !important;
                      width: 85% !important;
                      max-width: 300px !important;
                      height: 100% !important;
                      z-index: 10000 !important;
                      transform: translateX(-100%) !important;
                      transition: transform 0.3s ease !important;
                      background-color: var(--ifm-background-surface-color) !important;
                      border-right: 1px solid var(--ifm-toc-border-color) !important;
                      box-shadow: 2px 0 8px rgba(0, 0, 0, 0.15) !important;
                    }
                
                    body.sidebar-shown .theme-doc-sidebar-container {
                      transform: translateX(0) !important;
                    }
                
                    [class*="docMainContainer"] {
                      margin-left: 0 !important;
                      width: 100% !important;
                      max-width: 100% !important;
                    }
                
                    .sidebar-overlay {
                      display: none;
                      position: fixed;
                      top: 0;
                      left: 0;
                      right: 0;
                      bottom: 0;
                      background-color: rgba(0, 0, 0, 0.7);
                      z-index: 9999;
                    }
                
                    body.sidebar-shown .sidebar-overlay {
                      display: block;
                    }
                
                    body.sidebar-shown {
                      overflow: hidden;
                    }
                  }
                  `}
                </style>
                {/* Dynamic JS for handling sidebar toggle */}
                <script>
                  {`
                  (function() {
                    function setupSidebar() {
                      // Create overlay for mobile sidebar
                      let overlay = document.querySelector('.sidebar-overlay');
                      if (!overlay) {
                        overlay = document.createElement('div');
                        overlay.className = 'sidebar-overlay';
                        document.body.appendChild(overlay);
                        
                        // Close sidebar when clicking overlay
                        overlay.addEventListener('click', function() {
                          document.body.classList.remove('sidebar-shown');
                        });
                      }
                      
                      // Setup toggle buttons for mobile
                      const toggleButtons = document.querySelectorAll('.navbar__toggle, .navbar-sidebar__close');
                      toggleButtons.forEach(btn => {
                        btn.addEventListener('click', function() {
                          document.body.classList.toggle('sidebar-shown');
                        });
                      });
                      
                      // Add keyboard support
                      document.addEventListener('keydown', function(e) {
                        if (e.key === 'Escape' && document.body.classList.contains('sidebar-shown')) {
                          document.body.classList.remove('sidebar-shown');
                        }
                      });
                    }
                    
                    // Run setup when DOM is ready
                    if (document.readyState === 'loading') {
                      document.addEventListener('DOMContentLoaded', setupSidebar);
                    } else {
                      setupSidebar();
                    }
                  })();
                  `}
                </script>
              </>
            );
          }
          EOL
          
          echo "âœ“ Custom Head component created with sidebar fix"
          
          # Also create a fix-sidebar.js script as backup
          mkdir -p static/js
          cat > static/js/fix-sidebar.js << 'EOL'
          // Sidebar fix - backup approach
          (function() {
            function setupSidebar() {
              // Create overlay for mobile sidebar
              let overlay = document.querySelector('.sidebar-overlay');
              if (!overlay) {
                overlay = document.createElement('div');
                overlay.className = 'sidebar-overlay';
                document.body.appendChild(overlay);
                
                // Close sidebar when clicking overlay
                overlay.addEventListener('click', function() {
                  document.body.classList.remove('sidebar-shown');
                });
              }
              
              // Setup toggle buttons for mobile
              const toggleButtons = document.querySelectorAll('.navbar__toggle, .navbar-sidebar__close');
              toggleButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                  document.body.classList.toggle('sidebar-shown');
                });
              });
            }
            
            // Run setup when DOM is ready
            if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', setupSidebar);
            } else {
              setupSidebar();
            }
          })();
          EOL
          
          # Update scripts in docusaurus.config.ts (using a safe regex pattern)
          sed -i "s|scripts: \[\(.*\)\]|scripts: [\n    {\n      src: '/js/fix-sidebar.js',\n      async: false,\n      defer: false\n    }\1]|" docusaurus.config.ts

      - name: Build website
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: npm run build

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          clean: true
