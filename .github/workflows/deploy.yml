name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Docusaurus site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      
      - name: Create SSR-safe sidebar script
        run: |
          echo "Creating SSR-safe sidebar script..."
          mkdir -p static/js
          cat > static/js/fix-sidebar.js << 'EOL'
          // Safe sidebar fix script - executes only in browser
          // Version with timestamp: 2023-11-01-005
          
          // IMPORTANT: SSR safety check - run only in browser environment
          // This prevents "document is not defined" errors during build
          (function() {
            // Skip execution during SSR
            if (typeof window === 'undefined' || typeof document === 'undefined') {
              return;
            }
            
            // Delay execution until after page load
            if (document.readyState === 'loading') {
              document.addEventListener('DOMContentLoaded', initSidebar);
            } else {
              setTimeout(initSidebar, 10);
            }
            
            function initSidebar() {
              try {
                // Setup mobile toggle buttons
                const toggleButtons = document.querySelectorAll('.navbar__toggle, .navbar-sidebar__close');
                toggleButtons.forEach(btn => {
                  btn.addEventListener('click', function() {
                    document.body.classList.toggle('sidebar-shown');
                  });
                });
                
                // Create overlay for mobile
                let overlay = document.querySelector('.sidebar-overlay');
                if (!overlay) {
                  overlay = document.createElement('div');
                  overlay.className = 'sidebar-overlay';
                  document.body.appendChild(overlay);
                  
                  overlay.addEventListener('click', function() {
                    document.body.classList.remove('sidebar-shown');
                  });
                }
              } catch (error) {
                console.error('[Sidebar Fix] Error:', error);
              }
            }
          })();
          
          // Cache-busting timestamp
          // TIMESTAMP_PLACEHOLDER
          EOL
          
          # Add actual timestamp for cache busting
          TIMESTAMP=$(date +%s)
          sed -i "s|// TIMESTAMP_PLACEHOLDER|// Build timestamp: ${TIMESTAMP}|" static/js/fix-sidebar.js

      - name: Add critical CSS to custom.css
        run: |
          echo "Adding critical CSS fixes to custom.css..."
          cat >> src/css/custom.css << 'EOL'
          
          /* Critical sidebar positioning - HIGHEST PRIORITY */
          @media (min-width: 997px) {
            .theme-doc-sidebar-container {
              position: fixed !important;
              top: var(--ifm-navbar-height) !important;
              left: 0 !important;
              bottom: 0 !important;
              width: 250px !important;
              height: calc(100vh - var(--ifm-navbar-height)) !important;
              overflow-y: auto !important;
              z-index: 200 !important;
              border-right: 1px solid var(--ifm-toc-border-color) !important;
            }
            
            [class*="docMainContainer"] {
              margin-left: 250px !important;
              width: calc(100% - 250px) !important;
              max-width: calc(100% - 250px) !important;
            }
          
            /* Fix any nested container elements */
            [class*="docMainContainer"] .container,
            [class*="docMainContainer"] .row,
            [class*="docMainContainer"] [class*="docItemCol"] {
              width: 100% !important;
              max-width: 100% !important;
              margin-left: 0 !important;
            }
          }
          
          /* Mobile sidebar positioning */
          @media (max-width: 996px) {
            .theme-doc-sidebar-container {
              position: fixed !important;
              top: 0 !important;
              left: 0 !important;
              bottom: 0 !important;
              width: 85% !important;
              max-width: 300px !important;
              height: 100% !important;
              z-index: 10000 !important;
              transform: translateX(-100%) !important;
              transition: transform 0.3s ease !important;
              background-color: var(--ifm-background-surface-color) !important;
              border-right: 1px solid var(--ifm-toc-border-color) !important;
              box-shadow: 2px 0 8px rgba(0, 0, 0, 0.15) !important;
            }
          
            body.sidebar-shown .theme-doc-sidebar-container {
              transform: translateX(0) !important;
            }
          
            [class*="docMainContainer"] {
              margin-left: 0 !important;
              width: 100% !important;
              max-width: 100% !important;
            }
          
            .sidebar-overlay {
              display: none;
              position: fixed;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              background-color: rgba(0, 0, 0, 0.7);
              z-index: 9999;
            }
          
            body.sidebar-shown .sidebar-overlay {
              display: block;
            }
          
            body.sidebar-shown {
              overflow: hidden;
            }
          }
          EOL

      - name: Clean up unused files
        run: |
          echo "Removing unused files and folders..."
          # Remove deleted files if they exist (won't fail if they don't)
          rm -f src/clientModules/sidebarEnhancer.js || true
          rm -f src/css/global-sidebar-fix.css || true
          rm -f src/clientModules/sidebarFixer.js || true

      - name: Update docusaurus.config.ts 
        run: |
          echo "Editing config file directly with a simpler approach..."
          
          # Create a small script to directly edit the file
          cat > update-config.js << 'EOL'
          const fs = require('fs');
          
          // Read the file
          let content = fs.readFileSync('docusaurus.config.ts', 'utf8');
          
          // Simple string replace for the entire scripts section
          // This avoids template literals which cause YAML parsing issues
          content = content.replace(
            /scripts:[\s\S]*?\],/g, 
            "scripts: [\n    {\n      src: '/js/fix-sidebar.js?v=5.0.0',\n      async: true,\n      defer: true,\n      'data-ssr': 'exclude',\n    },\n  ],"
          );
          
          // Write back to file
          fs.writeFileSync('docusaurus.config.ts', content);
          console.log('Config file updated successfully');
          EOL
          
          # Run the script
          node update-config.js
          
          # Verify the update worked
          echo "Checking updated scripts section:"
          grep -A 6 "scripts:" docusaurus.config.ts

      - name: Build website
        env:
          NODE_OPTIONS: --max-old-space-size=8192
        run: npm run build

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          clean: true
          clean-exclude: |
            .nojekyll
            CNAME
          commit-message: "Deploy website - ${GITHUB_SHA}"
          git-config-name: GitHub Actions
          git-config-email: actions@github.com
